#include <iostream>
#include <string.h>
#include <stdio.h>
#include <stdlib.h>

using namespace std;
char save[9][10]={"void","int","float","char","if","else","while","do","return"};

char str[15];
char line[300];
int num=0;
int zhushi = 0;
int over = 0;
int err = 0;
int errArr[50];
int errPoint = 0;

int check(char a[])
{
    for(int i=0;i<9;i++){
       if(strcmp(save[i],a)==0)
            return i+25;
    }
    return 0;
}

int first(char arr[])
{
    int n = strlen(arr);
    int i=0,j=0;
    while(i<n)
    {
        if(zhushi == 1){
            zhushi = 0;
            return 0;
        }else if(zhushi == 2){
            if(arr[i]=='*'&&arr[i+1]=='/')
                zhushi = 0;
            return 0;
        }
        if(arr[i]==' ' || arr[i]=='\t'){
            i++;
            err = 0;
            continue;
        }
        memset(str,0,sizeof(str));
        j=0;
        if(isalpha(arr[i])){
            str[j]=arr[i];
            i++;
            while(isalnum(arr[i])){
                str[++j]=arr[i];
                i++;
            }
            str[++j]='\0';
            int c = check(str);
            if(c==0){
                printf("<1,%s>,",str);
            }
            else {
                printf("<%d,->,",c);
            }
        }
        else if(isdigit(arr[i]))
        {
            str[j]=arr[i++];
            if(isalpha(arr[i])!=0){
                err = 1;
                errArr[errPoint]=num;
                errPoint++;
                printf("LexicalError,");
                while(arr[i]!=' ')
                    i++;
            }else{
            while(isdigit(arr[i])){
                str[++j]=arr[i++];
            }
            str[i]='\0';
            printf("<2,%s>,",str);
        }
        }
        else{
            switch(arr[i]){
                case '+':{
                    printf("<3,->,");
                    i++;
                    break;
                }
                case '-':{
                    printf("<4,->,");
                    i++;
                    break;
                }
                case '*':{
                    if(arr[i+1]=='/'){
                        zhushi = 0;
                        break;
                    }
                    printf("<5,->,");
                    i++;
                    break;
                }
                case '/':{
                    if(arr[i+1]=='/'){
                        zhushi = 1;
                        return 1;
                    }
                    else if(arr[i+1]=='*'){
                        zhushi = 2;
                        return 1;
                    }
                    else{
                        printf("<6,->,");
                    }
                    i++;
                    break;
                }
                case '%':{
                    printf("<7,->,");
                    i++;
                    break;
                }
                case '(':{
                    printf("<17,->,");
                    i++;
                    break;
                }
                case ')':{
                    printf("<18,->,");
                    i++;
                    break;
                }
                case '[':{
                    printf("<19,->,");
                    i++;
                    break;
                }
                case ']':{
                    printf("<20,->,");
                    i++;
                    break;
                }
                case '{':{
                    printf("<21,->,");
                    i++;
                    break;
                }
                case '}':{
                    printf("<22,->,");
                    i++;
                    break;
                }
                case ';':{
                    printf("<23,->,");
                    i++;
                    break;
                }
                case ',':{
                    printf("<24,->,");
                    i++;
                    break;
                }
                case '<':{
                    if(arr[i+1]=='='){
                        printf("<9,->,");
                        i++;
                    }
                    else
                        printf("<8,->,");
                    i++;
                    break;
                }
                case '>':{
                    if(arr[i+1]=='='){
                        printf("<11,->,");
                        i++;
                    }
                    else
                        printf("<10,->,");
                    i++;
                    break;
                }
                case '=':{
                    if(arr[i+1]=='='){
                        printf("<12,->,");
                        i++;
                    }
                    else
                        printf("<16,->,");
                    i++;
                    break;
                }
                case '!':{
                    if(arr[i+1]=='='){
                        printf("<13,->,");
                        i++;
                        i++;
                    }

                    break;
                }
                case '&':{
                    if(arr[i+1]=='&'){
                        printf("<14,->,");
                        i++;
                        i++;
                    }
                    break;
                }
                case '|':{
                    if(arr[i+1]=='|'){
                        printf("<15,->,");
                        i++;
                        i++;
                    }

                    break;
                }
                case '#':{
                    over = 1;
                    i++;
                    return 0;
                }
            }
        }
    }
    return 1;
}

int main()
{
    char cht;
    int c=0;
    int z=0;
    while(over != 1){
        gets(line);
        if(strlen(line)>0){
            if(strcmp(line," ")==0)
                continue;
            num++;
            c=first(line);
            if(c==1){
                printf("\n");
            }
        }
    }
    if(errPoint>0){
    printf("\nLexicalError(s) on line(s) ");
    for(int i=0;i<errPoint;i++){
        printf("%d,",errArr[i]);
    }
    }
    return 0;
}
